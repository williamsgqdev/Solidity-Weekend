{
	"id": "3e01596dfefcaae494ede5014da86cba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Loop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ncontract Loop {\n    function forloop() external pure{\n         for(uint i = 0 ; i < 10 ; i++){\n             if(i == 3){\n                 continue;\n             }\n             if(i == 5){\n                 break;\n             }\n         }\n    }\n\n    function whileLoop() external pure{\n        uint j = 0;\n        while(j > 10){\n           j++;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "forloop",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileLoop",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Loop.sol\":56:416  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Loop.sol\":56:416  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbc68f960\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe7c898ef\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Loop.sol\":76:298  function forloop() external pure{... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"Loop.sol\":304:414  function whileLoop() external pure{... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Loop.sol\":76:298  function forloop() external pure{... */\n    tag_6:\n        /* \"Loop.sol\":123:129  uint i */\n      0x00\n        /* \"Loop.sol\":119:292  for(uint i = 0 ; i < 10 ; i++){... */\n    tag_10:\n        /* \"Loop.sol\":140:142  10 */\n      0x0a\n        /* \"Loop.sol\":136:137  i */\n      dup2\n        /* \"Loop.sol\":136:142  i < 10 */\n      lt\n        /* \"Loop.sol\":119:292  for(uint i = 0 ; i < 10 ; i++){... */\n      iszero\n      tag_11\n      jumpi\n        /* \"Loop.sol\":172:173  3 */\n      0x03\n        /* \"Loop.sol\":167:168  i */\n      dup2\n        /* \"Loop.sol\":167:173  i == 3 */\n      eq\n        /* \"Loop.sol\":164:217  if(i == 3){... */\n      iszero\n      tag_13\n      jumpi\n        /* \"Loop.sol\":193:201  continue */\n      jump(tag_12)\n        /* \"Loop.sol\":164:217  if(i == 3){... */\n    tag_13:\n        /* \"Loop.sol\":239:240  5 */\n      0x05\n        /* \"Loop.sol\":234:235  i */\n      dup2\n        /* \"Loop.sol\":234:240  i == 5 */\n      eq\n        /* \"Loop.sol\":231:281  if(i == 5){... */\n      iszero\n      tag_14\n      jumpi\n        /* \"Loop.sol\":260:265  break */\n      jump(tag_11)\n        /* \"Loop.sol\":231:281  if(i == 5){... */\n    tag_14:\n        /* \"Loop.sol\":119:292  for(uint i = 0 ; i < 10 ; i++){... */\n    tag_12:\n        /* \"Loop.sol\":145:148  i++ */\n      dup1\n      dup1\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      swap2\n      pop\n      pop\n        /* \"Loop.sol\":119:292  for(uint i = 0 ; i < 10 ; i++){... */\n      jump(tag_10)\n    tag_11:\n      pop\n        /* \"Loop.sol\":76:298  function forloop() external pure{... */\n      jump\t// out\n        /* \"Loop.sol\":304:414  function whileLoop() external pure{... */\n    tag_8:\n        /* \"Loop.sol\":348:354  uint j */\n      0x00\n        /* \"Loop.sol\":368:408  while(j > 10){... */\n    tag_18:\n        /* \"Loop.sol\":378:380  10 */\n      0x0a\n        /* \"Loop.sol\":374:375  j */\n      dup2\n        /* \"Loop.sol\":374:380  j > 10 */\n      gt\n        /* \"Loop.sol\":368:408  while(j > 10){... */\n      iszero\n      tag_19\n      jumpi\n        /* \"Loop.sol\":394:397  j++ */\n      dup1\n      dup1\n      tag_20\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      swap2\n      pop\n      pop\n        /* \"Loop.sol\":368:408  while(j > 10){... */\n      jump(tag_18)\n    tag_19:\n        /* \"Loop.sol\":338:414  {... */\n      pop\n        /* \"Loop.sol\":304:414  function whileLoop() external pure{... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_22:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:323   */\n    tag_16:\n        /* \"#utility.yul\":129:132   */\n      0x00\n        /* \"#utility.yul\":152:176   */\n      tag_25\n        /* \"#utility.yul\":170:175   */\n      dup3\n        /* \"#utility.yul\":152:176   */\n      tag_22\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":143:176   */\n      swap2\n      pop\n        /* \"#utility.yul\":198:264   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":191:196   */\n      dup3\n        /* \"#utility.yul\":188:265   */\n      eq\n        /* \"#utility.yul\":185:288   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":268:286   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":185:288   */\n    tag_26:\n        /* \"#utility.yul\":315:316   */\n      0x01\n        /* \"#utility.yul\":308:313   */\n      dup3\n        /* \"#utility.yul\":304:317   */\n      add\n        /* \"#utility.yul\":297:317   */\n      swap1\n      pop\n        /* \"#utility.yul\":90:323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":329:509   */\n    tag_28:\n        /* \"#utility.yul\":377:454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":374:375   */\n      0x00\n        /* \"#utility.yul\":367:455   */\n      mstore\n        /* \"#utility.yul\":474:478   */\n      0x11\n        /* \"#utility.yul\":471:472   */\n      0x04\n        /* \"#utility.yul\":464:479   */\n      mstore\n        /* \"#utility.yul\":498:502   */\n      0x24\n        /* \"#utility.yul\":495:496   */\n      0x00\n        /* \"#utility.yul\":488:503   */\n      revert\n\n    auxdata: 0xa2646970667358221220f02fb5f201e818fd00d843b6d3fab7243ea5e769951e4f6bf596280491a120c464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610168806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bc68f9601461003b578063e7c898ef14610045575b600080fd5b61004361004f565b005b61004d61008e565b005b60005b600a81101561008b57600381141561006957610078565b60058114156100775761008b565b5b8080610083906100ba565b915050610052565b50565b60005b600a8111156100ad5780806100a5906100ba565b915050610091565b50565b6000819050919050565b60006100c5826100b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156100f8576100f7610103565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220f02fb5f201e818fd00d843b6d3fab7243ea5e769951e4f6bf596280491a120c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC68F960 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x8B JUMPI PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x69 JUMPI PUSH2 0x78 JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x77 JUMPI PUSH2 0x8B JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x83 SWAP1 PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xAD JUMPI DUP1 DUP1 PUSH2 0xA5 SWAP1 PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xB0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xF8 JUMPI PUSH2 0xF7 PUSH2 0x103 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x2F 0xB5 CALLCODE ADD 0xE8 XOR REVERT STOP 0xD8 NUMBER 0xB6 0xD3 STATICCALL 0xB7 0x24 RETURNDATACOPY 0xA5 0xE7 PUSH10 0x951E4F6BF596280491A1 KECCAK256 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:360:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@forloop_29": {
									"entryPoint": 79,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whileLoop_45": {
									"entryPoint": 142,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:512:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "143:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "170:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "152:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "152:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "143:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "268:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "191:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "188:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "188:77:1"
															},
															"nodeType": "YulIf",
															"src": "185:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "297:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "308:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "315:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "119:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "129:3:1",
														"type": ""
													}
												],
												"src": "90:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "357:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "367:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "329:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063bc68f9601461003b578063e7c898ef14610045575b600080fd5b61004361004f565b005b61004d61008e565b005b60005b600a81101561008b57600381141561006957610078565b60058114156100775761008b565b5b8080610083906100ba565b915050610052565b50565b60005b600a8111156100ad5780806100a5906100ba565b915050610091565b50565b6000819050919050565b60006100c5826100b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156100f8576100f7610103565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220f02fb5f201e818fd00d843b6d3fab7243ea5e769951e4f6bf596280491a120c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC68F960 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x8B JUMPI PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x69 JUMPI PUSH2 0x78 JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x77 JUMPI PUSH2 0x8B JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x83 SWAP1 PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xAD JUMPI DUP1 DUP1 PUSH2 0xA5 SWAP1 PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xB0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xF8 JUMPI PUSH2 0xF7 PUSH2 0x103 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x2F 0xB5 CALLCODE ADD 0xE8 XOR REVERT STOP 0xD8 NUMBER 0xB6 0xD3 STATICCALL 0xB7 0x24 RETURNDATACOPY 0xA5 0xE7 PUSH10 0x951E4F6BF596280491A1 KECCAK256 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:360:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;76:222;;;:::i;:::-;;304:110;;;:::i;:::-;;76:222;123:6;119:173;140:2;136:1;:6;119:173;;;172:1;167;:6;164:53;;;193:8;;164:53;239:1;234;:6;231:50;;;260:5;;231:50;119:173;145:3;;;;;:::i;:::-;;;;119:173;;;;76:222::o;304:110::-;348:6;368:40;378:2;374:1;:6;368:40;;;394:3;;;;;:::i;:::-;;;;368:40;;;338:76;304:110::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:233::-;129:3;152:24;170:5;152:24;:::i;:::-;143:33;;198:66;191:5;188:77;185:103;;;268:18;;:::i;:::-;185:103;315:1;308:5;304:13;297:20;;90:233;;;:::o;329:180::-;377:77;374:1;367:88;474:4;471:1;464:15;498:4;495:1;488:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "72000",
								"executionCost": "123",
								"totalCost": "72123"
							},
							"external": {
								"forloop()": "infinite",
								"whileLoop()": "176"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 416,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f02fb5f201e818fd00d843b6d3fab7243ea5e769951e4f6bf596280491a120c464736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "BC68F960"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "E7C898EF"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 76,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 76,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 76,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76,
											"end": 298,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 414,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 414,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 76,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 76,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 292,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 142,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 136,
											"end": 137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 119,
											"end": 292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 119,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 173,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 173,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 164,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 164,
											"end": 217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 193,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 193,
											"end": 201,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 164,
											"end": 217,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 164,
											"end": 217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 234,
											"end": 235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 234,
											"end": 240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 260,
											"end": 265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 281,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 292,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 145,
											"end": 148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 292,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 380,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 368,
											"end": 408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 394,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 394,
											"end": 397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 394,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 408,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 414,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 170,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 143,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 191,
											"end": 196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 188,
											"end": 265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 185,
											"end": 288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 185,
											"end": 288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 304,
											"end": 317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 297,
											"end": 317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 503,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"forloop()": "bc68f960",
							"whileLoop()": "e7c898ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"forloop\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileLoop\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Loop.sol\":\"Loop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Loop.sol\":{\"keccak256\":\"0x5ed40e53ca76501e41c5e3f356588a1b49350fb12648ff5aadf0ffb3747a78df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a854ad1c4ba44d2357e7d74b7fe575f7de7cacb1d8c173ca7f80e3c5cf8960a\",\"dweb:/ipfs/QmTsB7Ecwh7MmWygC9rBWWFUyCkjSmCPygiA7JgBodLgje\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Loop.sol": {
				"ast": {
					"absolutePath": "Loop.sol",
					"exportedSymbols": {
						"Loop": [
							46
						]
					},
					"id": 47,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "Loop",
							"nameLocation": "65:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "108:190:0",
										"statements": [
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "149:143:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "167:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "172:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "167:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "164:53:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "174:43:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "193:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "239:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "234:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 25,
															"nodeType": "IfStatement",
															"src": "231:50:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "241:40:0",
																"statements": [
																	{
																		"id": 23,
																		"nodeType": "Break",
																		"src": "260:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "136:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "140:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "136:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "128:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "123:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "123:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "132:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "123:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "145:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "145:3:0"
												},
												"nodeType": "ForStatement",
												"src": "119:173:0"
											}
										]
									},
									"functionSelector": "bc68f960",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forloop",
									"nameLocation": "85:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "92:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:0:0"
									},
									"scope": 46,
									"src": "76:222:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "338:76:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "353:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "348:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 32,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"hexValue": "30",
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "357:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "348:10:0"
											},
											{
												"body": {
													"id": 42,
													"nodeType": "Block",
													"src": "381:27:0",
													"statements": [
														{
															"expression": {
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "394:3:0",
																"subExpression": {
																	"id": 39,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "394:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 41,
															"nodeType": "ExpressionStatement",
															"src": "394:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "374:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "378:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 43,
												"nodeType": "WhileStatement",
												"src": "368:40:0"
											}
										]
									},
									"functionSelector": "e7c898ef",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileLoop",
									"nameLocation": "313:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:0:0"
									},
									"scope": 46,
									"src": "304:110:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 47,
							"src": "56:360:0",
							"usedErrors": []
						}
					],
					"src": "32:384:0"
				},
				"id": 0
			}
		}
	}
}